package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/isaacmirandacampos/finkofee/internal/interface/graphql/model"
)

// CreateTransaction is the resolver for the createTransaction field.
func (r *mutationResolver) CreateTransaction(ctx context.Context, input model.NewTransaction) (*model.Transaction, error) {
	newTransaction := &model.Transaction{
		ID:          uuid.NewString(),
		Amount:      input.Amount,
		Description: input.Description,
		CreatedAt:   time.Now().UTC().Format(time.RFC3339),
	}
	r.ListTransactions = append(r.ListTransactions, newTransaction)
	return newTransaction, nil
}

// Transactions is the resolver for the Transactions field.
func (r *queryResolver) Transactions(ctx context.Context) ([]*model.Transaction, error) {
	return r.ListTransactions, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
